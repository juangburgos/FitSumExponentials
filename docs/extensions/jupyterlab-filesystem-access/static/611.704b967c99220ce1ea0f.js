"use strict";(self.webpackChunkjupyterlab_filesystem_access=self.webpackChunkjupyterlab_filesystem_access||[]).push([[611],{611:(e,t,a)=>{a.r(t),a.d(t,{default:()=>f});var i=a(861),n=a(854),r=a(684),o=a(505),s=a(800),l=a(788),c=a(614),d=a(901);const h="FileSystemAccess",w=`${h}:`;async function y(e){const t=[];for await(const a of e)t.push(a);return t}class u{get isDisposed(){return this._isDisposed}dispose(){this.isDisposed||(this._isDisposed=!0,d.Signal.clearData(this))}get name(){return h}get serverSettings(){return l.ServerConnection.makeSettings()}get fileChanged(){return this._fileChanged}get rootHandle(){return this._rootHandle}set rootHandle(e){this._rootHandle=e}async get(e,t){if(e=this.cleanPath(e),!this._rootHandle)return{name:"",path:"",created:(new Date).toISOString(),last_modified:(new Date).toISOString(),format:null,mimetype:"",content:null,writable:!0,type:"directory"};const a=await this.getParentHandle(e),i=c.PathExt.dirname(e),n=c.PathExt.basename(e);let r;if(r=n?await this.getHandle(a,n):a,"file"===r.kind)return this.getFileModel(r,i,!0);{const e=[];for await(const t of r.values())"file"===t.kind?e.push(await this.getFileModel(t,c.PathExt.join(i,n))):e.push({name:t.name,path:c.PathExt.join(i,n,t.name),created:"",last_modified:"",format:null,mimetype:"",content:null,writable:!0,type:"directory"});return{name:n,path:c.PathExt.join(i,n),last_modified:"",created:"",format:null,mimetype:"",content:e,size:void 0,writable:!0,type:"directory"}}}async getDownloadUrl(e){throw new Error("Method not implemented.")}async newUntitled(e){let t="";e&&e.path&&(t=this.cleanPath(e.path));const a=e?.type||"directory",i=c.PathExt.join(t,"directory"===a?"Untitled Folder":"untitled"),n="notebook"===a?"ipynb":e?.ext||"txt",r=await this.getParentHandle(i);let o=c.PathExt.basename(i);const s=o;let l;if("directory"===a){let e=1;for(;await this.hasHandle(r,o);)o=`${s} ${e++}`;await r.getDirectoryHandle(o,{create:!0}),l=await this.get(c.PathExt.join(t,o))}else{let e=1;for(;await this.hasHandle(r,`${o}.${n}`);)o=`${s}${e++}`;const a=`${o}.${n}`;await r.getFileHandle(a,{create:!0}),l=await this.get(c.PathExt.join(t,a))}return this._fileChanged.emit({type:"new",oldValue:null,newValue:l}),l}async delete(e){e=this.cleanPath(e);const t=await this.getParentHandle(e);await t.removeEntry(c.PathExt.basename(e),{recursive:!0}),this._fileChanged.emit({type:"delete",oldValue:{path:e},newValue:null})}async rename(e,t){e=this.cleanPath(e),t=this.cleanPath(t),await this.doCopy(e,t),await this.delete(e);const a=this.get(t);return a.then((t=>{this._fileChanged.emit({type:"rename",oldValue:{path:e},newValue:t})})),a}async save(e,t){e=this.cleanPath(e);const a=await this.getParentHandle(e);if("directory"===t?.type)return await a.getDirectoryHandle(c.PathExt.basename(e),{create:!0}),this.get(e);const i=await a.getFileHandle(c.PathExt.basename(e),{create:!0}),n=await i.createWritable({}),r=t?.format,o=t?.content;if("json"===r){const e=JSON.stringify(o,null,2);await n.write(e)}else if("base64"===r){const e=await function(e,t="text/plain;charset=UTF-8"){return fetch(`data:${t};base64,`+e).then((e=>e.blob()))}(o);await n.write(e)}else await n.write(o);return await n.close(),this.get(e)}async copy(e,t){e=this.cleanPath(e);const a=await this.get(e),i=c.PathExt.dirname(e);let n=a.name;if(i===t){const e=c.PathExt.extname(a.name);n=e?`${n.slice(0,n.length-e.length)} (Copy)${e}`:`${n} (Copy)`}const r=c.PathExt.join(t,n);return await this.doCopy(e,r),this.get(r)}async createCheckpoint(e){return{id:"test",last_modified:(new Date).toISOString()}}async listCheckpoints(e){return[{id:"test",last_modified:(new Date).toISOString()}]}restoreCheckpoint(e,t){return Promise.resolve(void 0)}deleteCheckpoint(e,t){return Promise.resolve(void 0)}async getParentHandle(e){const t=this._rootHandle;if(!t)throw new Error("No root file handle");let a=t;for(const t of e.split("/").slice(0,-1))a=await a.getDirectoryHandle(t);return a}async getHandle(e,t){const a=(await y(e.values())).filter((e=>e.name===t));if(a.length)return a[0];throw new Error(`${t} does not exist.`)}async hasHandle(e,t){const a=(await y(e.values())).filter((e=>e.name===t));return Boolean(a.length)}async getFileModel(e,t,a){const i=await e.getFile();let n,r=null;return n=i.type&&i.type.split("/")&&["image","audio","video"].includes(i.type.split("/")[0])?"base64":"text",a&&(r="base64"===n?function(e){let t="";const a=new Uint8Array(e);for(let e=0;e<a.byteLength;e++)t+=String.fromCharCode(a[e]);return window.btoa(t)}(await i.arrayBuffer()):await i.text()),{name:i.name,path:c.PathExt.join(t,i.name),created:new Date(i.lastModified).toISOString(),last_modified:new Date(i.lastModified).toISOString(),format:n,content:r,writable:!0,type:"file",mimetype:i.type}}async doCopy(e,t){const a=await this.getParentHandle(e),i=c.PathExt.basename(e);let n;n=i?await this.getHandle(a,i):a;const r=await this.getParentHandle(t),o=c.PathExt.basename(t);if("directory"===n.kind){await r.getDirectoryHandle(o,{create:!0});for await(const a of n.values())await this.doCopy(c.PathExt.join(e,a.name),c.PathExt.join(t,a.name))}else{const e=await r.getFileHandle(o,{create:!0}),t=await e.createWritable({}),a=await n.getFile(),i=await a.arrayBuffer();t.write(i),await t.close()}}cleanPath(e){return e.includes(w)?e.replace(w,""):e}_isDisposed=!1;_fileChanged=new d.Signal(this);_rootHandle=null}const m={id:"jupyterlab-filesystem-access:plugin",requires:[n.IFileBrowserFactory,o.ITranslator],optional:[r.ISettingRegistry,i.IToolbarWidgetRegistry],autoStart:!0,activate:(e,t,a,r,l)=>{const c=window.showDirectoryPicker;if(!c)return void console.warn("The File System Access API is not supported in this browser.");const{serviceManager:d}=e,{createFileBrowser:w}=t,y=a.load("jupyterlab-filesystem-access"),f=new u;d.contents.addDrive(f);const p=w("jp-filesystem-browser",{driveName:f.name,restore:!1});p.title.caption=y.__("Local File System"),p.title.icon=s.listIcon,p.showFileCheckboxes=!1;const g=p.toolbar;g.id="jp-filesystem-toolbar",l&&r&&((0,i.setToolbar)(g,(0,i.createToolbarFactory)(l,r,h,m.id,a??o.nullTranslator),g),l.addFactory(h,"open-folder",(e=>new i.ToolbarButton({icon:s.folderIcon,onClick:async()=>{const e=await c();e&&(f.rootHandle=e,p.model.cd("/"))},tooltip:y.__("Open a new folder")}))),l.addFactory(h,"uploader",(e=>new n.Uploader({model:p.model,translator:a}))),l.addFactory(h,"filename-searcher",(e=>{const t=(0,s.FilenameSearcher)({updateFilter:(e,t)=>{p.model.setFilter((t=>e(t.name.toLowerCase())))},useFuzzyFilter:!0,placeholder:y.__("Filter files by name"),forceRefresh:!1});return t.addClass("jp-FileBrowser-filterBox"),t}))),e.shell.add(p,"left",{type:"FileSystemAccess"})}},f=m}}]);